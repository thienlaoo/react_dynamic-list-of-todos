{"version":3,"sources":["types/Filters.ts","TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filters","TodoInfo","todo","selectTodo","selectedTodo","className","id","completed","cn","title","type","onClick","TodoList","todos","map","TodoFilter","query","onQueryChange","onFilterChange","filter","value","onChange","event","target","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","clearForm","useState","selectedUser","setSelectedUser","useEffect","userId","user","catch","error","Error","href","email","name","App","setTodos","setSelectedTodo","setQuery","setFilter","fetchTodos","a","fetchedTodos","console","filteredTodos","useMemo","titleToLC","toLocaleLowerCase","queryToLC","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdd5e838.chunk.js","sourcesContent":["export enum Filters {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from './types/Todo';\n\ninterface Props {\n  todo: Todo;\n  selectedTodo: Todo | null;\n  selectTodo: (todoId: Todo | null) => void\n}\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo,\n  selectTodo,\n  selectedTodo,\n}) => {\n  return (\n    <>\n      <tr key={todo.id} data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">{todo.id}</td>\n        <td className=\"is-vcentered\">\n          {todo.completed && (\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          )}\n        </td>\n        <td className=\"is-vcentered is-expanded\">\n          <p\n            className={cn({\n              'has-text-link': todo.completed === true,\n              'has-text-danger': todo.completed === false,\n            })}\n          >\n            {todo.title}\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          {selectedTodo?.id === todo.id ? (\n            <button\n              data-cy=\"selectButton\"\n              className=\"button is-link\"\n              type=\"button\"\n              onClick={() => selectTodo(null)}\n            >\n              <span className=\"icon\">\n                <i className=\"far fa-eye-slash\" />\n              </span>\n            </button>\n          ) : (\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          )}\n        </td>\n      </tr>\n    </>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  selectTodo: (todoId: Todo | null) => void\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <TodoInfo\n            key={todo.id}\n            todo={todo}\n            selectTodo={selectTodo}\n            selectedTodo={selectedTodo}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Filters } from '../../types/Filters';\n\ninterface Props {\n  query: string;\n  onQueryChange: (newquery: string) => void;\n  filter: Filters;\n  onFilterChange: (Filters: Filters) => void;\n}\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onQueryChange,\n  onFilterChange,\n  filter,\n}) => {\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onQueryChange(event.target.value);\n  };\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onFilterChange(event.target.value as Filters);\n  };\n\n  const handleClearFilters = (() => {\n    onQueryChange('');\n  });\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={handleFilterChange}\n          >\n            <option value={Filters.All}>All</option>\n            <option value={Filters.Active}>Active</option>\n            <option value={Filters.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          value={query}\n          onChange={handleQueryChange}\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"clearFilters\"\n              onClick={handleClearFilters}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nexport function wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  selectedTodo: Todo | null;\n  clearForm: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, clearForm }) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo?.userId)\n        .then(user => {\n          setSelectedUser(user);\n        }).catch(error => {\n          throw new Error(`${error}`);\n        });\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo ${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={clearForm}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Filters } from './types/Filters';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState<Filters>(Filters.All);\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const fetchedTodos = await getTodos();\n\n        setTodos(fetchedTodos);\n      } catch (error) {\n        /* eslint-disable no-console */\n        console.error('Error fetching todos:', error);\n      }\n    };\n\n    fetchTodos();\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return todos.filter(todo => {\n      const titleToLC = todo.title.toLocaleLowerCase();\n      const queryToLC = query.toLocaleLowerCase();\n\n      switch (filter) {\n        case Filters.All:\n          return titleToLC.includes(queryToLC);\n        case Filters.Completed:\n          return titleToLC.includes(queryToLC) && todo.completed;\n        case Filters.Active:\n          return titleToLC.includes(queryToLC) && !todo.completed;\n        default:\n          return todos;\n      }\n    });\n  }, [query, todos, filter]);\n\n  const clearForm = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={setQuery}\n                filter={filter}\n                onFilterChange={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0 ? (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodo={selectedTodo}\n                  selectTodo={(todo: Todo | null) => {\n                    setSelectedTodo(todo);\n                  }}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n\n          </div>\n        </div>\n      </div>\n      {selectedTodo && <TodoModal selectedTodo={selectedTodo} clearForm={clearForm} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}